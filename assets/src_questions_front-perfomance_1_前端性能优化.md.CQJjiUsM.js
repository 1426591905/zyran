import{_ as a,c as o,a0 as l,o as t}from"./chunks/framework.Canm8p3M.js";const p=JSON.parse('{"title":"前端性能优化","description":"","frontmatter":{},"headers":[],"relativePath":"src/questions/front-perfomance/1_前端性能优化.md","filePath":"src/questions/front-perfomance/1_前端性能优化.md","lastUpdated":1735629187000}'),r={name:"src/questions/front-perfomance/1_前端性能优化.md"};function i(n,e,s,c,d,h){return t(),o("div",null,e[0]||(e[0]=[l('<h1 id="前端性能优化" tabindex="-1">前端性能优化 <a class="header-anchor" href="#前端性能优化" aria-label="Permalink to &quot;前端性能优化&quot;">​</a></h1><h2 id="回流重绘" tabindex="-1">回流重绘 <a class="header-anchor" href="#回流重绘" aria-label="Permalink to &quot;回流重绘&quot;">​</a></h2><h4 id="类型-中级" tabindex="-1">类型：<code>中级</code> <a class="header-anchor" href="#类型-中级" aria-label="Permalink to &quot;类型：`中级`&quot;">​</a></h4><h4 id="级别-w1、w2、w3、w4、w5、w6" tabindex="-1">级别：<code>W1</code>、<code>W2</code>、<code>W3</code>、<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w1、w2、w3、w4、w5、w6" aria-label="Permalink to &quot;级别：`W1`、`W2`、`W3`、`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-5-分" tabindex="-1">解答（5 分） <a class="header-anchor" href="#解答-5-分" aria-label="Permalink to &quot;解答（5 分）&quot;">​</a></h4><ul><li><p><strong>1：</strong> 回流：浏览器渲染页面之前需要对结构进行布局计算</p></li><li><p><strong>1：</strong> 重绘：将已经计算好布局的容器绘制出来</p></li><li><p><strong>1：</strong> 触发回流：页面上有容器的几何属性发生变更</p></li><li><p><strong>1：</strong> 触发重绘：容器非几何属性变更 （字体，颜色）</p></li><li><p><strong>1：</strong> 回流必定重绘，重绘不一定回流</p></li></ul><h2 id="如何减少页面的回流和重绘" tabindex="-1">如何减少页面的回流和重绘？ <a class="header-anchor" href="#如何减少页面的回流和重绘" aria-label="Permalink to &quot;如何减少页面的回流和重绘？&quot;">​</a></h2><h4 id="类型-中级-1" tabindex="-1">类型：<code>中级</code> <a class="header-anchor" href="#类型-中级-1" aria-label="Permalink to &quot;类型：`中级`&quot;">​</a></h4><h4 id="级别-w1、w2、w3、w4、w5、w6-1" tabindex="-1">级别：<code>W1</code>、<code>W2</code>、<code>W3</code>、<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w1、w2、w3、w4、w5、w6-1" aria-label="Permalink to &quot;级别：`W1`、`W2`、`W3`、`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-5-分-1" tabindex="-1">解答（5 分） <a class="header-anchor" href="#解答-5-分-1" aria-label="Permalink to &quot;解答（5 分）&quot;">​</a></h4><ul><li><p><strong>1：</strong> 合并DOM操作：</p><ul><li>使用文档片段（DocumentFragment）批量插入节点</li><li>使用innerHTML一次性插入大量内容</li><li>使用display: none隐藏元素后再进行多次操作，最后再显示</li></ul></li><li><p><strong>1：</strong> 缓存布局信息：</p><ul><li>避免在循环中多次读取offset、scroll等属性</li><li>使用变量缓存布局信息</li></ul></li><li><p><strong>1：</strong> 使用CSS3特性：</p><ul><li>使用transform和opacity替代top、left等属性</li><li>使用will-change提示浏览器优化</li></ul></li><li><p><strong>1：</strong> 减少复杂的选择器：</p><ul><li>避免使用过于复杂的CSS选择器</li><li>使用类选择器代替后代选择器</li></ul></li><li><p><strong>1：</strong> 优化动画和过渡：</p><ul><li>使用requestAnimationFrame进行动画</li><li>避免在动画中使用高开销的CSS属性</li></ul></li></ul>',11)]))}const f=a(r,[["render",i]]);export{p as __pageData,f as default};
